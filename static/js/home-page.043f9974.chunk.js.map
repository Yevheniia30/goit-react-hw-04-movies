{"version":3,"sources":["views/HomeView/HomeView.jsx","services/movies-api.js","views/NotFoundView/NotFoundView.jsx","Components/MoviesList/MoviesList.jsx"],"names":["HomeView","state","movies","error","isLoading","this","setState","moviesApi","fetchMovies","then","catch","finally","type","color","height","width","timeout","NotFoundView","MoviesList","Component","axios","defaults","baseURL","API_KEY","get","data","results","fetchByKeyWord","query","fetchMovieDetals","movieId","fetchGenres","genres","fetchReviews","fetchCast","res","withRouter","location","className","s","list","map","id","original_title","original_name","to","pathname","from"],"mappings":"sPAOMA,E,4MACJC,MAAQ,CACNC,OAAQ,GACRC,MAAO,KACPC,WAAW,G,uDAIb,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CAAEF,WAAW,IAE3BG,IACGC,cACAC,MAAK,SAAAP,GACJ,EAAKI,SAAS,CACZJ,OAAO,YAAKA,QAIfQ,OAAM,SAAAP,GAAK,OAAI,EAAKG,SAAS,CAAEH,aAC/BQ,SAAQ,kBAAM,EAAKL,SAAS,CAAEF,WAAW,S,oBAG9C,WAAU,IAAD,EAC8BC,KAAKJ,MAAlCC,EADD,EACCA,OAAQE,EADT,EACSA,UAAWD,EADpB,EACoBA,MAE3B,OACE,gCACGC,GACC,cAAC,IAAD,CACEQ,KAAK,OACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAGZb,EACC,cAACc,EAAA,QAAD,IAEA,gCACE,gDACA,cAACC,EAAA,EAAD,CAAYhB,OAAQA,c,GA1CTiB,aAkDRnB,a,gCCzDf,qBAEAoB,IAAMC,SAASC,QAAU,6BACzB,IAAMC,EAAU,mCA8CD,KACbf,YA5CkB,WAClB,OAAOY,IACJI,IADI,wCACiCD,IACrCd,MAAK,qBAAGgB,KAAgBC,YA0C3BC,eAtCqB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxB,OAAOR,IACJI,IADI,gCAEsBI,EAFtB,oBAEuCL,EAFvC,+CAIJd,MAAK,qBAAGgB,KAAgBC,YAkC3BG,iBA9BuB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B,OAAOV,IACJI,IADI,mBACYM,EADZ,oBAC+BP,EAD/B,oBAEJd,MAAK,qBAAGgB,SA4BXM,YAxBkB,WAClB,OAAOX,IACJI,IADI,sCAC+BD,EAD/B,oBAEJd,MAAK,qBAAGgB,KAAgBO,WAsB3BC,aAlBmB,SAAC,GAAiB,IAAfH,EAAc,EAAdA,QACtB,OAAOV,IACJI,IADI,mBACYM,EADZ,4BACuCP,EADvC,2BAEJd,MAAK,qBAAGgB,KAAgBC,YAgB3BQ,UAZgB,SAAC,GAAiB,IAAfJ,EAAc,EAAdA,QACnB,OAAOV,IACJI,IADI,mBACYM,EADZ,4BACuCP,EADvC,oBAEJd,MAAK,SAAA0B,GAAG,OAAIA,EAAIV,W,uEC1CNR,UAJM,WACnB,OAAO,sD,6GCwBMmB,eArBI,SAAC,GAA0B,IAAxBlC,EAAuB,EAAvBA,OAAQmC,EAAe,EAAfA,SAC5B,OACE,oBAAIC,UAAWC,IAAEC,KAAjB,SACGtC,EAAOuC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,cAAvB,OACV,6BACE,eAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaJ,GACrBzC,MAAO,CACL8C,KAAMV,IAJZ,UAQGM,GAAkBC,EAAe,QAT7BF","file":"static/js/home-page.043f9974.chunk.js","sourcesContent":["import { Component } from 'react';\n// import s from './HomeView.module.css';\nimport moviesApi from '../../services/movies-api';\nimport MoviesList from '../../Components/MoviesList';\nimport NotFoundView from '../../views/NotFoundView';\nimport Loader from 'react-loader-spinner';\n\nclass HomeView extends Component {\n  state = {\n    movies: [],\n    error: null,\n    isLoading: false,\n  };\n\n  // тренды\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    moviesApi\n      .fetchMovies()\n      .then(movies => {\n        this.setState({\n          movies: [...movies],\n        });\n        // console.log(movies);\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  }\n\n  render() {\n    const { movies, isLoading, error } = this.state;\n    // const { location } = this.props;\n    return (\n      <div>\n        {isLoading && (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n          />\n        )}\n        {error ? (\n          <NotFoundView />\n        ) : (\n          <div>\n            <h1>Trending Today</h1>\n            <MoviesList movies={movies} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default HomeView;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = 'c4360f2fc66490777a6befee451fce21';\n\n// тренды\nconst fetchMovies = () => {\n  return axios\n    .get(`/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(({ data }) => data.results);\n};\n\n// по ключевому слову\nconst fetchByKeyWord = ({ query }) => {\n  return axios\n    .get(\n      `/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`,\n    )\n    .then(({ data }) => data.results);\n};\n\n// инфо о фильме\nconst fetchMovieDetals = ({ movieId }) => {\n  return axios\n    .get(`/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then(({ data }) => data);\n};\n\n// жанры\nconst fetchGenres = () => {\n  return axios\n    .get(`/3/genre/movie/list?api_key=${API_KEY}&language=en-US`)\n    .then(({ data }) => data.genres);\n};\n\n// обзоры\nconst fetchReviews = ({ movieId }) => {\n  return axios\n    .get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    .then(({ data }) => data.results);\n};\n\n// актеры\nconst fetchCast = ({ movieId }) => {\n  return axios\n    .get(`/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n    .then(res => res.data);\n};\n\nexport default {\n  fetchMovies,\n  fetchByKeyWord,\n  fetchMovieDetals,\n  fetchGenres,\n  fetchReviews,\n  fetchCast,\n};\n","const NotFoundView = () => {\n  return <h1>404 page not found</h1>;\n};\n\nexport default NotFoundView;\n","import { Link, withRouter } from 'react-router-dom';\n\nimport s from './MoviesList.module.css';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <ul className={s.list}>\n      {movies.map(({ id, original_title, original_name }) => (\n        <li key={id}>\n          <Link\n            to={{\n              pathname: `/movies/${id}`,\n              state: {\n                from: location,\n              },\n            }}\n          >\n            {original_title || original_name}{' '}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default withRouter(MoviesList);\n"],"sourceRoot":""}